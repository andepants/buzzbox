rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================
    // DISPLAY NAMES COLLECTION (Public Read)
    // ============================================
    // This collection is INTENTIONALLY public for username availability checks
    // ONLY stores: { userId: string, createdAt: timestamp }
    // NO sensitive user data should be stored here

    match /displayNames/{displayName} {
      // Allow ANYONE (even unauthenticated) to read to check availability
      allow read: if true;

      // Allow authenticated users to create their own display name claim
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.keys().hasOnly(['userId', 'createdAt']);

      // Prevent updates (display names are immutable once claimed)
      allow update: if false;

      // Allow users to delete ONLY their own display name claim
      allow delete: if request.auth != null
                    && resource.data.userId == request.auth.uid;
    }

    // ============================================
    // USERS COLLECTION (User Discovery Enabled)
    // ============================================
    // User profiles - Readable by all authenticated users for discovery
    // Writable only by the owner

    match /users/{userId} {
      // Allow authenticated users to list and read user profiles for discovery
      allow list, get: if request.auth != null;

      // Users can only create their own profile with valid userType and isPublic
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.userType is string
                    && request.resource.data.userType in ['creator', 'fan']
                    && request.resource.data.isPublic is bool;

      // Users can only update their own profile, but CANNOT change userType or isPublic
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.userType == resource.data.userType
                    && request.resource.data.isPublic == resource.data.isPublic;

      // Users can delete their own profile
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // ============================================
    // CONVERSATIONS & MESSAGES (Private)
    // ============================================
    // These will be added later - for now, deny all access

    match /conversations/{conversationId} {
      allow read, write: if false; // TODO: Add proper rules in Epic 2
    }

    match /messages/{messageId} {
      allow read, write: if false; // TODO: Add proper rules in Epic 2
    }

    // ============================================
    // DEFAULT DENY ALL
    // ============================================
    // Explicitly deny access to any other collections

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
